{"ast":null,"code":"\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n  options = options || {};\n  var reporter = options.reporter;\n  var asyncProcess = utils.getOption(options, \"async\", true);\n  var autoProcess = utils.getOption(options, \"auto\", true);\n\n  if (autoProcess && !asyncProcess) {\n    reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n    asyncProcess = true;\n  }\n\n  var batch = Batch();\n  var asyncFrameHandler;\n  var isProcessing = false;\n\n  function addFunction(level, fn) {\n    if (!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n      // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n      // This needs to be done before, since we're checking the size of the batch to be 0.\n      processBatchAsync();\n    }\n\n    batch.add(level, fn);\n  }\n\n  function processBatch() {\n    // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n    // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n    isProcessing = true;\n\n    while (batch.size()) {\n      var processingBatch = batch;\n      batch = Batch();\n      processingBatch.process();\n    }\n\n    isProcessing = false;\n  }\n\n  function forceProcessBatch(localAsyncProcess) {\n    if (isProcessing) {\n      return;\n    }\n\n    if (localAsyncProcess === undefined) {\n      localAsyncProcess = asyncProcess;\n    }\n\n    if (asyncFrameHandler) {\n      cancelFrame(asyncFrameHandler);\n      asyncFrameHandler = null;\n    }\n\n    if (localAsyncProcess) {\n      processBatchAsync();\n    } else {\n      processBatch();\n    }\n  }\n\n  function processBatchAsync() {\n    asyncFrameHandler = requestFrame(processBatch);\n  }\n\n  function clearBatch() {\n    batch = {};\n    batchSize = 0;\n    topLevel = 0;\n    bottomLevel = 0;\n  }\n\n  function cancelFrame(listener) {\n    // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n    var cancel = clearTimeout;\n    return cancel(listener);\n  }\n\n  function requestFrame(callback) {\n    // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n    var raf = function (fn) {\n      return setTimeout(fn, 0);\n    };\n\n    return raf(callback);\n  }\n\n  return {\n    add: addFunction,\n    force: forceProcessBatch\n  };\n};\n\nfunction Batch() {\n  var batch = {};\n  var size = 0;\n  var topLevel = 0;\n  var bottomLevel = 0;\n\n  function add(level, fn) {\n    if (!fn) {\n      fn = level;\n      level = 0;\n    }\n\n    if (level > topLevel) {\n      topLevel = level;\n    } else if (level < bottomLevel) {\n      bottomLevel = level;\n    }\n\n    if (!batch[level]) {\n      batch[level] = [];\n    }\n\n    batch[level].push(fn);\n    size++;\n  }\n\n  function process() {\n    for (var level = bottomLevel; level <= topLevel; level++) {\n      var fns = batch[level];\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n        fn();\n      }\n    }\n  }\n\n  function getSize() {\n    return size;\n  }\n\n  return {\n    add: add,\n    process: process,\n    size: getSize\n  };\n}","map":{"version":3,"names":["utils","require","module","exports","batchProcessorMaker","options","reporter","asyncProcess","getOption","autoProcess","warn","batch","Batch","asyncFrameHandler","isProcessing","addFunction","level","fn","size","processBatchAsync","add","processBatch","processingBatch","process","forceProcessBatch","localAsyncProcess","undefined","cancelFrame","requestFrame","clearBatch","batchSize","topLevel","bottomLevel","listener","cancel","clearTimeout","callback","raf","setTimeout","force","push","fns","i","length","getSize"],"sources":["C:/proyects/React-proyects/react-gallery/node_modules/batch-processor/src/batch-processor.js"],"sourcesContent":["\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}