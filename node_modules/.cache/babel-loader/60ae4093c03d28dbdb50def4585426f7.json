{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function (options) {\n  var idGenerator = options.idGenerator;\n  var getState = options.stateHandler.getState;\n  /**\n   * Gets the resize detector id of the element.\n   * @public\n   * @param {element} element The target element to get the id of.\n   * @returns {string|number|null} The id of the element. Null if it has no id.\n   */\n\n  function getId(element) {\n    var state = getState(element);\n\n    if (state && state.id !== undefined) {\n      return state.id;\n    }\n\n    return null;\n  }\n  /**\n   * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n   * @public\n   * @param {element} element The target element to set the id of.\n   * @returns {string|number|null} The id of the element.\n   */\n\n\n  function setId(element) {\n    var state = getState(element);\n\n    if (!state) {\n      throw new Error(\"setId required the element to have a resize detection state.\");\n    }\n\n    var id = idGenerator.generate();\n    state.id = id;\n    return id;\n  }\n\n  return {\n    get: getId,\n    set: setId\n  };\n};","map":{"version":3,"names":["module","exports","options","idGenerator","getState","stateHandler","getId","element","state","id","undefined","setId","Error","generate","get","set"],"sources":["C:/proyects/React-proyects/react-gallery/node_modules/element-resize-detector/src/id-handler.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function(options) {\n    var idGenerator     = options.idGenerator;\n    var getState        = options.stateHandler.getState;\n\n    /**\n     * Gets the resize detector id of the element.\n     * @public\n     * @param {element} element The target element to get the id of.\n     * @returns {string|number|null} The id of the element. Null if it has no id.\n     */\n    function getId(element) {\n        var state = getState(element);\n\n        if (state && state.id !== undefined) {\n            return state.id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n     * @public\n     * @param {element} element The target element to set the id of.\n     * @returns {string|number|null} The id of the element.\n     */\n    function setId(element) {\n        var state = getState(element);\n\n        if (!state) {\n            throw new Error(\"setId required the element to have a resize detection state.\");\n        }\n\n        var id = idGenerator.generate();\n\n        state.id = id;\n\n        return id;\n    }\n\n    return {\n        get: getId,\n        set: setId\n    };\n};\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;EAC/B,IAAIC,WAAW,GAAOD,OAAO,CAACC,WAA9B;EACA,IAAIC,QAAQ,GAAUF,OAAO,CAACG,YAAR,CAAqBD,QAA3C;EAEA;AACJ;AACA;AACA;AACA;AACA;;EACI,SAASE,KAAT,CAAeC,OAAf,EAAwB;IACpB,IAAIC,KAAK,GAAGJ,QAAQ,CAACG,OAAD,CAApB;;IAEA,IAAIC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaC,SAA1B,EAAqC;MACjC,OAAOF,KAAK,CAACC,EAAb;IACH;;IAED,OAAO,IAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACI,SAASE,KAAT,CAAeJ,OAAf,EAAwB;IACpB,IAAIC,KAAK,GAAGJ,QAAQ,CAACG,OAAD,CAApB;;IAEA,IAAI,CAACC,KAAL,EAAY;MACR,MAAM,IAAII,KAAJ,CAAU,8DAAV,CAAN;IACH;;IAED,IAAIH,EAAE,GAAGN,WAAW,CAACU,QAAZ,EAAT;IAEAL,KAAK,CAACC,EAAN,GAAWA,EAAX;IAEA,OAAOA,EAAP;EACH;;EAED,OAAO;IACHK,GAAG,EAAER,KADF;IAEHS,GAAG,EAAEJ;EAFF,CAAP;AAIH,CA5CD"},"metadata":{},"sourceType":"script"}